<section id="whats-edns0-all-about">
 <title>What's EDNS All About (And Why Should I Care)?</title>

 <!-- ====== Overview ====== -->
 <section id="whats-edns0-all-about-overview">
  <title>EDNS Overview</title>

  <para>Traditional DNS queries are typically small in size, that fits nicely into a single UDP packet (less than 512 bytes). Extension mechanism for DNS (EDNS, or EDNS(0)) gives us a mechanism to send DNS data in multiple larger packets over UDP. In order to support EDNS, both the DNS server and the network need to be properly prepared to support the larger packet size and multiple fragments.</para>

  <para>This is important for DNSSEC, since DNSSEC responses are larger than traditional DNS. If DNS servers and network environment cannot support large multiple UDP packets, it will cause retransmission over TCP, or the larger UDP responses are discarded. Users will likely experience slow DNS resolution or unable to resolve certain names at all.</para>

  <para>Please see <xref linkend="network-requirements"/> for more information on what DNSSEC expects from the network environment.</para>
 </section>

 <!-- ====== EDNS on DNS Servers ====== -->
 <section id="edns-on-dns-servers">
  <title>EDNS on DNS Servers</title>
  <para>BIND have been shipped with EDNS enabled by default for over a decade, and the UDP packet size already set to the maximum 4096 bytes. So as the DNS administrator, there should not be any re-configuration needed. You can use <command>dig</command> to verify that your server supports EDNS and the UDP packet size it is allowing as follows:
   <screen>$ <userinput>dig @192.168.1.7 www.isc.org. A +dnssec +multiline</userinput>

; &lt;&lt;>> DiG 9.10.0-P2 &lt;&lt;>> @192.168.1.7 www.isc.org. A +dnssec +multiline
; (1 server found)
;; global options: +cmd
;; Got answer:
;; ->>HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 63266
;; flags: qr rd ra ad; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
<userinput>; EDNS: version: 0, flags: do; udp: 4096</userinput>
;; QUESTION SECTION:
;www.isc.org.		IN A

;; ANSWER SECTION:
www.isc.org.		23 IN A	149.20.64.69
www.isc.org.		23 IN RRSIG A 5 3 60 (
				20141029233238 20140929233238 4521 isc.org.
				DX5BaGVd4KzU2AIH911Kar/UmdmkARyPhJVLr0oyPZaq
				5zoobGqFI4efvzL0mcpncuUg3BSU5Q48WdBu92xinMdb
				E75zl+adgEBOsFgFQR/zqM3myt/8SngWm4+TQ3XFh9eN
				jqExHZZuZ268Ntlxqgf9OmKRRv8X8YigaPShuyU= )

;; Query time: 7 msec
;; SERVER: 192.168.1.7#53(192.168.1.7)
;; WHEN: Fri Oct 03 16:31:33 CST 2014
;; MSG SIZE  rcvd: 223</screen></para>

  <para>There is a helpful testing tool available (provided by DNS-OARC) that you can use to verify resolver behavior regarding EDNS support: <ulink url="https://www.dns-oarc.net/oarc/services/replysizetest/" /></para>

  <para>So you made sure your name servers have EDNS enabled. That should be the end of the story, right? Unfortunately, EDNS is a hop-by-hop extension to DNS. This means the use of EDNS is negotiated between each pair of hosts in a DNS resolution process, which in turn means if one of your upstream name servers (for instance, your ISP's recursive name server that you forward to) does not support EDNS, you will still experience packet fragmentation.</para>
 </section>

 <!-- ====== Support for Large Packets on Network Equipments ====== -->
 <section id="support-for-large-packets-on-network-equipments">
  <title>Support for Large Packets on Network Equipments</title>
  <para>Okay, so both your recursive name server and your ISP's name servers support EDNS, we are all good here, right? Not so fast. As these large packets have to traverse through the network gears, the network gears must allow them to pass.</para>

  <para>When data is physically transmitted over a network, it has to be broken down into chunks. The size of the data chunk is known as Maximum Transmission Units (MTU), and it can be different from network to network. IP fragmentation occurs when a large data packet needs to be broken down into smaller chunks so that each chunk is smaller than the MTU, and these smaller chunks need to be reassembled back into the large data packet. IP fragmentation is not necessarily a bad thing, it most likely occurs on your network today.</para>

  <para>Some network gears, such as firewalls, may make assumptions about DNS traffic. One of these assumptions may be how large each DNS packet is, and when the firewall sees a larger DNS packet than it expects, the large packet is either rejected or its fragments dropped because the firewall thinks it's an attack. This configuration probably didn't cause problems in the past since traditional DNS packets are usually pretty small in size. However, with DNSSEC, these configurations need to be updated, since DNSSEC traffic regularly exceeds 1500 bytes (a common MTU value). If not updated, the result on your validating resolver is, it looks like the queries go un-answered (large packets rejected), or in the case of fragmentation, only a part of the answer made it to the validating resolver, and your validating resolver may need to re-ask the question again and again.</para>

  <para>And while you're updating your network gear, make sure TCP port 53 is also allowed for DNS traffic.</para>
 </section>

 <!-- ====== Wait... DNS uses TCP? ====== -->
 <section id="dns-uses-tcp">
  <title>Wait... DNS Uses TCP?</title>
  <para> Yes. DNS uses TCP port 53 as a fallback mechanism, when it cannot use UDP to transmit data. This has always been the case even way before DNSSEC arrived on the scene. Traditional DNS relies on TCP 53 for operations such as zone transfer. The use of DNSSEC (and DNS over IPv6) increases the chance that DNS data will be transmitted on TCP.</para>

  <para>If your network gears are blocking or filtering TCP port 53 today, you may already experience instability with DNS resolution before deploying DNSSEC.</para>
 </section>
</section>
