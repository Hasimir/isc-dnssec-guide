<section id="validation-easy-start-explained">
 <title>Validation Easy Start Explained</title>
 <para>In <xref linkend="easy-start-guide-for-recursive-servers"/>, we used two lines of configuration to turn on DNSSEC validation. Now we are going to take a closer look at what it actually does, and some other options.</para>

 <!-- dnssec-enable -->
 <section id="dnssec-enable-explained">
  <title>dnssec-enable</title>
  <screen>dnssec-enable yes;</screen>
  <para>This line enables DNSSEC support in named. Unless set to yes, named behaves as if it does not support DNSSEC. The default is yes.</para>
 </section>

 <!-- dnssec-validation -->
 <!-- TODO: Use a list to describe the three possible configurations: no, yes, auto -->
 <section id="dnssec-validation-explained">
  <title>dnssec-validation</title>
  <screen>dnssec-validation auto;</screen>
  <para>This line enables DNSSEC validation in named. Note <command>dnssec-enable</command> also needs to be set to yes to be effective (which by default it is). There are three possible choices:
   <itemizedlist>
    <listitem>
     <simpara><emphasis>no</emphasis>: DNSSEC valdiation is disabled, and recursive server will behave in the "old fashioned" way of performing insecure DNS lookups.</simpara>
    </listitem>

    <listitem>
     <simpara><emphasis>yes</emphasis>: DNSSEC validation is enabled, but a trust anchor must be manually configured using a trusted-key or managed-key statement. This is the default.</simpara>
    </listitem>

    <listitem>
     <simpara><emphasis>auto</emphasis>: DNSSEC validation is enabled, and a default trust anchor for the DNS root zone is used.</simpara>
    </listitem>
   </itemizedlist>
  </para>

  <para>To learn more about trust anchors, please refer to the sections <xref linkend="trust-anchors"/> and <xref linkend="trust-anchors-and-managed-keys"/>.</para>
 </section>
</section>
