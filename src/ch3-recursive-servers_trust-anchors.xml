<section id="trust-anchors">
 <title>Trust Anchors</title>
 <para>A trust anchor is a DNSKEY that is placed into a validating resolver so that the validator can verify the results for a given request back to a known public key (the trust anchor). A validating resolver must have at least one trust anchor installed in order to perform DNSSEC validation.</para>

 <para>BIND9 includes a copy of the root key, in the file <command>bind.keys</command>. You can download the root key manually from reputable sources such as <ulink url="https://www.isc.org/bind-keys"/>. The key file must be readable to named.</para>


 <!-- ====== HOw Trust Anchors are Used ====== -->
 <section id="how-trust-anchors-are-used">
  <title>How Trust Anchors are Used</title>
  <para>In the section <xref linkend="how-does-dnssec-change-dns-lookup"/>, we walked through the DNSSEC lookup process (12 steps), and at the end of the 12 steps, a critical comparison happens: the key received from the remote server, and the key we have on file are compared to see if we trust it. The key we have on file is called a trust anchor, sometimes also known as trust key, trust point, or secure entry point.</para>

  <para>The 12-step lookup process describes the DNSSEC lookup in the ideal world where every single domain name is signed and properly delegated, each validating resolver only needs to have one trust anchor, and that is the root’s public key. But there is no restriction that the validating resolver must only have one trust anchor. In fact, in the early stages of DNSSEC adaptation, it is not unusual for a validating resolver to have more than one trust anchor.</para>

  <para>For instance, before the root zone was signed (prior to the year 2010), some validating resolvers that wish to validate domain names in the .gov zone needed to obtain and install the key for .gov. A sample lookup process for www.fbi.gov would thus be only 8 steps rather than 12 steps that look like this:</para>

  <para>
  <!-- TODO: Insert 8-step diagram here -->
  <imagedata fileref="../img/image-placeholder.jpg" align="center"/>
  
   <orderedlist>
    <!-- #1 -->
    <listitem>
     <simpara>Validating resolver queries fbi.gov name server for the A record of www.fbi.gov</simpara>
    </listitem>

    <!-- #2 -->
    <listitem>
     <simpara>FBI's name server responds with answer and RRSIG</simpara>
    </listitem>

    <!-- #3 -->
    <listitem>
     <simpara>Validating resolver queries FBI's name server for DNSKEY</simpara>
    </listitem>

    <!-- #4 -->
    <listitem>
     <simpara>FBI's name server responds with DNSKEY and RRSIG</simpara>
    </listitem>

    <!-- #5 -->
    <listitem>
     <simpara>Validating resolver queries .gov name server for DS record of fbi.gov</simpara>
    </listitem>

    <!-- #6 -->
    <listitem>
     <simpara>.gov name server responds with DS record and RRSIG for fbi.gov</simpara>
    </listitem>

    <!-- #7 -->
    <listitem>
     <simpara>Validating resolver queries .gov name server for DNSKEY</simpara>
    </listitem>

    <!-- #8 -->
    <listitem>
     <simpara>.gov name server responds with DNSKEY and RRSIG</simpara>
    </listitem>
   </orderedlist>
  </para> 

  <para>This all looks very similar, except it’s shorter than the 12-steps that we saw earlier. Once the validating resolver receives the DNSKEY file in #8, it recognizes that this is a trusted key (trust anchor), and never goes to the root name servers to ask for the DS record for .gov, or ask the the root name servers for its DNSKEY.</para>

  <para>In fact, whenever the validating resolver receives a DNSKEY, it checks to see if this is a trusted key, to decide whether or not it needs to continue chasing down the validation chain.</para>
 </section>


 <!-- ====== Trust Anchors and Managed Keys ====== -->
 <section id="trusted-keys-and-managed-keys">
  <title>Trusted Keys and Managed Keys</title>
  <para>So we have at least one DNSKEY on file, and it is known as a trust anchor. How did it get here, and how do we maintain it?</para>

  <para>If you followed the recommendation in <xref linkend="easy-start-guide-for-recursive-servers"/>, by setting <command>dnssec-validation</command> to <command>auto</command>, then there is nothing you need to do. BIND already includes a default key (usually in the file <command>bind.keys</command>), that will automatically update itself. It looks something like this:
   <screen>managed-keys {
    . initial-key 257 3 8 "AwEAAagAIKlVZrpC6Ia7gEzahOR+9W29euxhJhVVLOyQbSEW0O8gcCjF
    FVQUTf6v58fLjwBd0YI0EzrAcQqBGCzh/RStIoO8g0NfnfL2MTJRkxoX
    bfDaUeVPQuYEhg37NZWAJQ9VnMVDxP/VHL496M/QZxkjf5/Efucp2gaD
    X6RS6CXpoY68LsvPVjR0ZSwzz1apAzvN9dlzEheX7ICJBBtuA6G3LQpz
    W5hOA2hzCTMjJPJ8LbqF6dsV6DoBQzgul0sGIcGOYl7OyQdXfZ57relS
    Qageu+ipAdTTJ25AsRTAoub8ONGcLmqrAmRLKBP1dfwhYB4N7knNnulq
    QxA+Uk1ihz0=";
};</screen>
  </para>

  <para>You could, of course, decide to manage this key on your own by hand. First, you’ll need to make sure that your <command>dnssec-validation</command> is set to <command>yes</command>:
   <screen>options {
    dnssec-validation yes;
};</screen>
  </para>

  <para>Then make sure that you have the following <command>trust-keys</command> statement configured, after you download the root key manually from a trustworthy source. This installs the root DNSKEY. Whenever the root key changes, this file needs to be updated manually. Failing to do so will break nearly all DNS requests made to this server.
   <screen>trusted-keys {
    . 257 3 8 "AwEAAagAIKlVZrpC6Ia7gEzahOR+9W29euxhJhVVLOyQbSEW0O8gcCjF
    FVQUTf6v58fLjwBd0YI0EzrAcQqBGCzh/RStIoO8g0NfnfL2MTJRkxoX
    bfDaUeVPQuYEhg37NZWAJQ9VnMVDxP/VHL496M/QZxkjf5/Efucp2gaD
    X6RS6CXpoY68LsvPVjR0ZSwzz1apAzvN9dlzEheX7ICJBBtuA6G3LQpz
    W5hOA2hzCTMjJPJ8LbqF6dsV6DoBQzgul0sGIcGOYl7OyQdXfZ57relS
    Qageu+ipAdTTJ25AsRTAoub8ONGcLmqrAmRLKBP1dfwhYB4N7knNnulq
    QxA+Uk1ihz0=";
};</screen>
  </para>

  <para>Looking back at the example in <xref linkend="how-trust-anchors-are-used"/>, if you wanted to explicitly trust <command>.gov</command> and only validate domain names under .gov, your <command>trusted-keys</command> statement would look something like this:
   <screen>trusted-keys {
    gov. 257 3 8 “AQO8daaz7B+yshOfL60rytKd9aOSujgponEw3fwBMEC3
    /+e9XzHw2k+VKnbJTZ+QaVtpfUd1q9HKZIv/ck83Gl5T
    jYKE5jtUZ2kpEDZfVNGv6yx0smtWAXv1nCJS9ohnyOTd
    397eMojGDHqkEC+uojEScZheEkMxzgCZwDAs+/CSU7mS
    uHtCRZn19xlZUd5Gv7yDQ3mbOUwuy30oSk0z1Q5UUPpo
    ihOugIZHFX6Jk7NLiW2wlqfq9qhV4zj7TiBiJY0mCc4z
    HN8/aq2VKDHp2Na7mWzvKyTy+SYQkBQ/08LbPwj9YMc+
    uCzKL6sU/ObHv17EFhD8aPDftTHZvV9L+OZr”;
};</screen></para>
 </section>
</section>
