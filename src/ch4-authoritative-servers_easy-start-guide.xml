<section id="easy-start-guide-for-authoritative-servers">
 <title>Easy Start Guide for Authoritative Servers</title>
 <para>
 This section provides the minimum amount of information to setup a working DNSSEC-enabled authoritative name server. A DNSSEC-enabled zone (or "signed" zone) contains additional resource records that are used to verify the authenticity of its zone information. To learn more about DNSSEC resource records, please see <xref linkend="what-does-dnssec-add-to-dns" />.</para>

 <para>For our examples below, we will be working with the zone <code>example.com</code>. There are four steps to configure an authoritative name server:
  <orderedlist>
   <!-- #1 Reconfigure BIND -->
   <listitem>
    <simpara><xref linkend="signing-easy-start-reconfigure-bind" /></simpara>
   </listitem>
   <!-- #2 Generate Keys -->
   <listitem>
    <simpara><xref linkend="signing-easy-start-generate-keys" /></simpara>
   </listitem>
   <!-- #3 Sign Zone Data -->
   <listitem>
    <simpara><xref linkend="signing-easy-start-sign-zone-data" /></simpara>
   </listitem>
   <!-- #4 Upload to Parent Zone -->
   <listitem>
    <simpara><xref linkend="signing-easy-start-upload-to-parent-zone" /></simpara>
   </listitem>
  </orderedlist></para>


 <!-- === #1 Reconfigure BIND === -->
 <section id="signing-easy-start-reconfigure-bind">
  <title>Reconfigure BIND</title>
  <para>Below is a very simple <code>named.conf</code>, in our example environment, this file is <code>/etc/bind/named.conf</code>. The lines you most likely need to add are in bold.
   <screen>options {
    <userinput>dnssec-enable yes;</userinput>
    directory "/etc/bind";
    recursion no;
    minimal-responses yes;
};

zone "example.com" IN {
    type master;
    file "db/example.com.db";
    <userinput>key-directory "keys/example.com";
    inline-signing yes;
    auto-dnssec maintain;</userinput>
};</screen></para>
 </section>


 <!-- === #2 Generate Keys === -->
 <section id="signing-easy-start-generate-keys">
  <title>Generate Keys</title>
  <para>Now that we have defined where keys will be stored, let’s go there and generate some keys. Refer to <xref linkend="system-entropy"/> for information on how you could speed this process up by increasing the randomness available to your system.
   <screen># <userinput>cd /etc/bind/keys/example.com</userinput>
# <userinput>dnssec-keygen -a RSASHA256 -b 1024 -3 example.com</userinput>
Generating key pair...++++++ .............++++++ 
Kexample.com.+008+57009
# <userinput>dnssec-keygen -a RSASHA256 -b 2048 -3 -f KSK example.com</userinput>
Generating key pair........................+++ ..................................+++ 
Kexample.com.+008+28267</screen></para>

  <para>This generated four key files in <code>/etc/bind/keys/example.com</code>, the only one we care about for now is the KSK key, namely <code>Kexample.com.+008+28267.key</code>. Remember this file name, we will be need it again shortly.</para>
 </section>


 <!-- === #3 Sign Zone Data === -->
 <section id="signing-easy-start-sign-zone-data">
  <title>Sign Zone Data</title>
  <para>Now we have keys, let’s sign the zone and generate those DNSSEC resource records! We will need to provide some random hex string, in the example below it is 1234567890abcdef: 
   <screen># <userinput>rndc signing -nsec3param 1 0 10 1234567890abcdef example.com</userinput></screen></para>

  <para>You’ll know these worked if you see the following syslog messages:
   <screen>Oct 21 13:47:07 zone example.com/IN (signed): reconfiguring zone keys
Oct 21 13:47:07 zone example.com/IN (signed): next key event: 21-Oct-2014 14:47:07.131
……
Oct 21 13:47:21 received control channel code 'signing -nsec3param 1 0 10 1234567890abcdef example.com'
Oct 21 13:47:21 zone example.com/IN (signed): zone_addnsec3chain(1,CREATE,10,1234567890ABCDEF)</screen></para>

  <note>
   <para>In our example above, we used a not-very-random string 1234567890abcdef as the "salt", it is best that you use some random source to create it. Here is an example on Linux to create a 16-character hex string: 
    <screen># <userinput>rndc signing -nsec3param 1 0 10 $(head -c 300 /dev/random | sha1sum | cut -b 1-16) example.com</userinput></screen>
    We will discuss more about what this means in <xref linkend="nsec-or-nsec3"/>.</para>
  </note>
 </section>


 <!-- === #4 Upload to Parent Zone === -->
 <section id="signing-easy-start-upload-to-parent-zone">
  <title>Upload to Parent Zone</title>
  <para>Everything is done on our local name server, now we need to generate some information to be uploaded to the parent zone to complete the chain of trust.The formats and the upload methods are actually dictated by your parent zone’s administrator, so contact your registrar or parent zone administrator to find out what the actual format should be, and how to deliver or upload the information to your parent zone.</para>

  <para>Here are some examples of what you may upload to your parent zone, actual keys shortened for display. Again, contact your parent zone administrator(s) to find out what is the correct format for you:
   <orderedlist>
    <!-- #1 DS Record -->
    <listitem>
     <simpara>DS Record Format: <code>example.com. IN DS 28267 8 1 66D47CE4B4F551BE5EDA43AC5F3109E8C98E2FAE</code></simpara>
    </listitem>

    <!-- #2 DNSKEY -->
    <listitem>
     <simpara>DNSKEY Format: <code>example.com. 172800 IN DNSKEY 257 3 8 (AwEAAbGOPf...U9AX2QHMY8=) ; key id = 28267</code></simpara>
    </listitem>

    <!-- #3 trust-key -->
    <listitem>
     <simpara>Trusted Key Format: <code>"example.com." 257 3 8 "AwEAAbGOPf...U9AX2QHMY8=";</code></simpara>
    </listitem>
   </orderedlist></para>

  <para>For more details and examples on how to work with your parent zone, please see <xref linkend="working-with-parent-zone"/></para>
 </section>


 <!-- === So... What Now? === -->
 <section id="signing-easy-start-so-what-now">
  <title>So... What Now?</title>
  <para>Congratulations, your zone is signed, and parent zone has accepted your upload. Your zone is now officially DNSSEC-enabled. What happens now? Well, there are a few maintenance tasks you need to do on a regular basis, which you can find in <xref linkend="signing-maintenance-tasks"/>.</para>

  <para>Other than that, you can edit the zone file as you normally would, and reload it using codes such as <code>rndc reload example.com</code>, and new DNSSEC resource records will automatically be created.</para>

  <para>Curious as to what all these commands did to your zone file? Read on to <xref linkend="your-zone-file-before-and-after-dnssec"/> and find out.</para>
 </section>

  <!-- === Your Zone File, Before and After DNSSEC === -->
 <section id="your-zone-file-before-and-after-dnssec">
  <title>Your Zone File, Before and After DNSSEC</title>
  <para>In the previous section <xref linkend="easy-start-guide-for-authoritative-servers"/>, we provided the minimal amount of information to essentially convert an traditional DNS zone into a DNSSEC-enabled zone. This is what the zone looked like before we started: 
   <screen>$ <userinput>dig @192.168.1.13 example.com. AXFR +multiline +onesoa</userinput>

; &lt;&lt;>> DiG 9.10.1 &lt;&lt;>> @192.168.1.13 example.com. AXFR +multiline +onesoa
; (1 server found)
;; global options: +cmd
example.com.		600 IN SOA ns1.example.com. admin.example.com. (
				2014102100 ; serial
				1800       ; refresh (30 minutes)
				900        ; retry (15 minutes)
				2419200    ; expire (4 weeks)
				300        ; minimum (5 minutes)
				)
example.com.		600 IN NS ns1.example.com.
ftp.example.com.	600 IN A 192.168.1.200
ns1.example.com.	600 IN A 192.168.1.1
web.example.com.	600 IN CNAME www.example.com.
www.example.com.	600 IN A 192.168.1.100</screen></para>

  <para>Below shows the test zone <code>example.com</code> after we have signed its zone data. As you can see, the zone grew in size, and the number of records multiplied:
   <screen>$ <userinput>dig @192.168.1.13 example.com. AXFR +multiline +onesoa</userinput>

; &lt;&lt;>> DiG 9.10.1 &lt;&lt;>> @192.168.1.13 example.com. AXFR +multiline +onesoa
; (1 server found)
;; global options: +cmd
example.com.		600 IN SOA ns1.example.com. admin.example.com. (
				2014102105 ; serial
				1800       ; refresh (30 minutes)
				900        ; retry (15 minutes)
				2419200    ; expire (4 weeks)
				300        ; minimum (5 minutes)
				)
example.com.		0 IN RRSIG NSEC3PARAM 8 2 0 (
				20141124033116 20141025031758 60798 example.com.
				DYmLLItzaZh5V/PSxLvg0RmAtk9CiWrXt0MMRRIyDgIB
				uzWUdxtY1Z6NlwdTlCqxVrQc2HLcth56/Y5FNy1WytcS
				7zDWNe/PByaMZu2M0c2FQqsOBKcxnboGHkZnpb3aaRU5
				L6qSwm5cNVlzgnL2bNZgIdiWGAehDJ2HunbgjJg= )
example.com.		0 IN NSEC3PARAM	1 0 10 81D0054748E9911A
example.com.		600 IN RRSIG NS 8 2 600 (
				20141124040836 20141025031758 60798 example.com.
				C3evXq53H5F8PWiJkF/j6+McSjvPMKRmJTgW0hnBfnxC
				5UJUhMCshgA8ZAwBs1NBvmOzbgeaX3kA4dUZOTyOEyDC
				wARvfndelSfeBEtf9ytbOpuxQya6PYG3hkYvIIWnoD8L
				QAUW7wcNiUl0szSPto/BH+ty/gonVRSIAizZSgA= )
example.com.		600 IN RRSIG SOA 8 2 600 (
				20141124041758 20141025031758 60798 example.com.
				yzU2MEY7i+fRH/RpQOwlOGvyI4PJSzATFsHjlenfsP08
				9ORFI6ZI+YcuFLqFhWja1yUszlEAxQxluLEvIvz5QFT+
				wDoKtcqArmDAOtqPtTE3+Ud6RBbeeSKt7zC5YYXX9M4H
				pAuEkjQoZg6cERV5PX3rBhivAtIBKMIqzIjdE1U= )
example.com.		0 IN RRSIG TYPE65534 8 2 0 (
				20141124033116 20141025031758 60798 example.com.
				NK+odtYTgbFv8Pal/v3/xnjbyAZhciUHkG3oB4sv/n6k
				lGyY7HDinUNq11UuZDbdEBLmClETvR1eu9YURZNuL6x5
				VgBSVl3UcJSWoQRZpLUbcwZjkXJIAFPi5G4234dFWgRp
				wUD7nfh5JA3JAcBI2TDw0nuYGzUepSSyBzlRlUs= )
example.com.		600 IN RRSIG DNSKEY 8 2 600 (
				20141124041758 20141025031758 45319 example.com.
				k5hyddHRksDbUdxIBbpL8ig6BvG0zKmh0eeM4C+nUYfL
				6BxPB3djXi3zAjz7zp9dWKLUKVkI8RsiDgY2zn2zhHav
				nVhFOQLSVa5fWsSL1BDSfP1wQ3jwn4HMf8mJTBIhcfOs
				Y4yww0awisGdcytYynQ8P9IlEJGQr8EJe9ZJwYvHXVCp
				C9bG7FMYN1J2BBJxyP8IZK/33c8Uc8Ky9JWMLmf/YIgk
				Sx5n87eLmc9Fc4DPj4a2bNKYhkmS70MTFIzzdOymqdF3
				BQwK5nj4tfZMBrD0ihLnFXL3uevXEM7iGt48jt+r1WEt
				SSmxq0gjmR+tpSeUbwKvHumObf+For9inw== )
example.com.		600 IN RRSIG DNSKEY 8 2 600 (
				20141124041758 20141025031758 60798 example.com.
				3Np9vK9XDdBdYehwxTMe3Ka0q4ce7Jg0urpNjXg6raxu
				B16T+kYoBOdsOtLDfd8lPulyGKtTez8uKHKpDbRQIM5w
				CqregG1NtYHmTizkrmQZjlvPyVXM88UabKNqv9CDo1Lv
				7yAlpN8ZF94ijnOtXHzzey0pn9dDVn3ttVtSF9M= )
example.com.		600 IN DNSKEY 256 3 8 (
				AwEAAfbc/0ESumm1mPVkm025PfHKHNYW62yx0wyLN5LE
				4DifN6FzIVSKSGdMOdq+z6vFGxzzjPDz7QZdeC6ttIUA
				Bo4tG7dDrsWK+tG5cm4vuylsEVbnnW5i+gFG/02+RYmZ
				ZT9AobXB5bVjfXl9SDBgpBluB35WUCAnK9WkRRUS08lf
				) ; ZSK; alg = RSASHA256; key id = 60798
example.com.		600 IN DNSKEY 257 3 8 (
				AwEAAb4N53kPbdRTAwvJT8OYVeVhQIldwppMy7KBJ+8k
				Uggx2PU3yP/qlq4Zjl0MMmqRiJhD/S+z9cJLNTZ9tHz1
				7aZQjFyGAyuU3DGW16xfMolcIn+c8TpPCzBOFhxk6jvO
				VLlz+Wgyi1ES+t29FjYYv5cVNRPmxXLRjlHFdO1DzX3N
				dmcUoZ+VVJCvaML9+6UpL/6jitNsoU8JHnxT9B2CGKcw
				N7VaK4l9Ida2BqY3/4UVqWzhj03/M5LK6cn1pEQbQMtY
				R0TNJURBKdK8bH663h98i23tVX0/85IsCVBL4Dd2boa3
				/7HPp7uZN1AjDvcRsOh1mqixwUGmVm1EskDIMy8=
				) ; KSK; alg = RSASHA256; key id = 45319
example.com.		0 IN TYPE65534 \# 5 ( 08B1070000 )
example.com.		0 IN TYPE65534 \# 5 ( 08ED7E0000 )
example.com.		600 IN NS ns1.example.com.
ftp.example.com.	600 IN RRSIG A 8 3 600 (
				20141124040836 20141025031758 60798 example.com.
				py4MskurpU4IdYtp+C+Z3RX63Cvzd+Cq85IbWygxv6G2
				I6OkL2xt+kPnOlNbyu83rJi03xUeCV3H3W9ZaucEe0H7
				z/m4Yk0iDfG0qlKqIoOyUtbydEGX3yZu11dnapg1rqiF
				RRuYcFZii/G9CyaT0JZ2WUhrvTt8HmUX8whbBzw= )
ftp.example.com.	600 IN A 192.168.1.200
ns1.example.com.	600 IN RRSIG A 8 3 600 (
				20141124040836 20141025031758 60798 example.com.
				c2eF6jg9KfzXvdtyxikYba211hiq2TI+iQA9c+G8ovjl
				i/+EmDxZo2UZg7VJJ+GTGtbX9k2zB27t85sOZPSumCcM
				SAWdMFjpOftf1Ftng5+MTEOS58qeIz1BiioY1WZXMO9g
				zkBgrXvn+f59SqKGL+OfSQ3jq9z4HQX4cdw5L0s= )
ns1.example.com.	600 IN A 192.168.1.1
web.example.com.	600 IN RRSIG CNAME 8 3 600 (
				20141124040836 20141025031758 60798 example.com.
				b5xpbsp1owt8t/IjANtuTEQRwqPja+yShaK6AXecK6GI
				zRY30aYCQ8b8U14RVle/6n6OPwEucQH4ZW/bSrW2RD2E
				VEwPEtHuVGNLKEoY2z0oS0+/qlRQglS3/dbgTd+0GDWj
				oKuDmp6nzKd8Jjr5jbAbT3Z/Co6XrUCXCRiBzPk= )
web.example.com.	600 IN CNAME www.example.com.
www.example.com.	600 IN RRSIG A 8 3 600 (
				20141124040836 20141025031758 60798 example.com.
				hmVT3NxNIsxZeXjrh4uSrXPjpd6luNcXQFgcLrGvakRR
				B6maWzo5RkRBM3+b7I1HZhonP5tvacWGeHJ+g5utTn8B
				Fc+VUG67wW4mMQAVLDInRPQvSs5+LLLS8vrhkXp+qyUd
				tN7Mjlz2+tquiB5UjDxZAlUDZl9QVYpqRe/SGXU= )
www.example.com.	600 IN A 192.168.1.100
19JN0CR6PP91VUIPVORE02O3K8MJI7CR.example.com. 300 IN RRSIG NSEC3 8 3 300 (
				20141124033116 20141025031758 60798 example.com.
				WTU9AJriLE2tdU10CtphGpqo0JVp20Dahi673Zujr7UM
				NNQumAgCq8hz7GQvFTfo99G3K6dkEqGyC2V2+9T9Be2Z
				fZdlQVN8TiCuteXOPyA8RTJ/35Px6mTsiOkYFnn+Qk1Z
				qTlHp0Se2MpLSBk1DhtmCEtmNZZGQuuTe+023Es= )
19JN0CR6PP91VUIPVORE02O3K8MJI7CR.example.com. 300 IN NSEC3 1 0 10 81D0054748E9911A (
				7SF5NN7RVUU5NLAH39BOCADFUP9TD578
				CNAME RRSIG )
7SF5NN7RVUU5NLAH39BOCADFUP9TD578.example.com. 300 IN RRSIG NSEC3 8 3 300 (
				20141124032753 20141025031758 60798 example.com.
				0MMwBpuTSOoTCLTk5p6YrnLtmBUgoYzJewH1oXaXDMVb
				vVDJY24xou0uJSe1G+EQoK86I1nbRqfS5nb5O861JtVW
				hUi6nor0yIGmTUZI+wGhS3RYQ6eklSKi9hUC7r3XXQTm
				Fuc5y4EZQj3Nv7xt5fBHizpZNjWwPXL+JTj3n2I= )
7SF5NN7RVUU5NLAH39BOCADFUP9TD578.example.com. 300 IN NSEC3 1 0 10 81D0054748E9911A (
				BLM5CBUC22V05DRBTV1EQ7UO3CP3JEEE
				A RRSIG )
BLM5CBUC22V05DRBTV1EQ7UO3CP3JEEE.example.com. 300 IN RRSIG NSEC3 8 3 300 (
				20141124033116 20141025031758 60798 example.com.
				QZ+vlfmGiM2UfDvqGMJiu11gGoPNWv9AvSxmQab8zYb4
				/OgmfBD5jpAFV2THcLD754AMUYIj9IdrRkIGl0o2kDqr
				yCDryA2lDIMoQLEGhZ/u6subVF4XbHdCyUk5go9S8CqF
				FnX3TsLIKf8LrCGrbIc0yudjpN10XyaHvBgVsW0= )
BLM5CBUC22V05DRBTV1EQ7UO3CP3JEEE.example.com. 300 IN NSEC3 1 0 10 81D0054748E9911A (
				K66CB7RCTHDHI5SFLISVQHNRGQFB54JB
				NS SOA RRSIG DNSKEY NSEC3PARAM
				TYPE65534 )
K66CB7RCTHDHI5SFLISVQHNRGQFB54JB.example.com. 300 IN RRSIG NSEC3 8 3 300 (
				20141124033116 20141025031758 60798 example.com.
				23AnF0jRrfCa8YTXLDEkxepXYtfe5uaxWtIfIuHBp1at
				hAWu9j+zHt1Fsg/IOQIttMx+jUIrpuo1vs0nwZMPVTl5
				octH1W3Xhe90gmYSCzEg+gX8iP1FpQpx0LAHHMfpRAu/
				JqqIfweyXMWxenafUCfVnB6HEidYAI01o036eKI= )
K66CB7RCTHDHI5SFLISVQHNRGQFB54JB.example.com. 300 IN NSEC3 1 0 10 81D0054748E9911A (
				T795BVJDSCMG79PEC0MTSLQH84M8C52T
				A RRSIG )
T795BVJDSCMG79PEC0MTSLQH84M8C52T.example.com. 300 IN RRSIG NSEC3 8 3 300 (
				20141124033116 20141025031758 60798 example.com.
				oaKapVbelNaEoWWadPX5VL6dZNhwm1hLhIdbECdDMQaj
				HW1re8hi25xhs816fsxuN7C+BjihHdv/nrmzuBRZNmtV
				oMQVI4NGRC3QoVEY3iOvzAx5Z6knAGoxhUJ2igO76lN1
				70E6tePNdpzyEJor5y0Fz5/EJ4sAwoTXyaY2q3I= )
T795BVJDSCMG79PEC0MTSLQH84M8C52T.example.com. 300 IN NSEC3 1 0 10 81D0054748E9911A (
				19JN0CR6PP91VUIPVORE02O3K8MJI7CR
				A RRSIG )</screen></para>
  <para>But this is a really messy way to tell if your zone is properly setup with DNSSEC. Fortunately, there are tools to help us with that. Read on to <xref linkend="how-to-test-authoritative-server" /> to learn more.
  </para>
 </section>
</section>
